# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/bsherman/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
export VIM_MODE_VICMD_KEY="jk"
export _Z_CMD="j"
. ~/.local/bin/z.sh
plugins=(git zsh-syntax-highlighting zsh-autosuggestions z zsh-vim-mode)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export PATH="$HOME/nvim/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="/opt/julia/bin:$PATH"
export EDITOR="nvim"
alias vim="nvim"
[ -f "/home/bsherman/.ghcup/env" ] && source "/home/bsherman/.ghcup/env" # ghcup-env
source /home/bsherman/.local/venv/bin/activate
export PATH="/usr/lib/postgresql/12/bin:${PATH}"
export PATH="$HOME/.tfenv/bin:${PATH}"
export PATH="$HOME/code/lua-language-server/bin/Linux:${PATH}"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

/usr/bin/keychain $HOME/.ssh/id_ed25519
source $HOME/.keychain/bsherman-sh
fpath+=${ZDOTDIR:-~}/.zsh_functions

if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
fi
export FZF_DEFAULT_OPTS="
-m --height 50% --border --layout=reverse
--info=inline --color=dark
--prompt='~ ' --pointer='▶' --marker='✗'
--preview-window=:hidden
--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} ||
  cat {})) || ([[ -d {} ]] && (tree -C {} | less)) ||
  echo {} 2> /dev/null | head -200'
--bind 'ctrl-e:execute(echo {+} | xargs -o nvim)'
--bind '?:toggle-preview'"

alias vv="pushd ~/.config/nvim; vim .; popd;"
alias vz="vim ~/.zshrc"
alias sz="source ~/.zshrc"
alias v3="vim ~/.config/i3/config"
alias cat="batcat"
export BAT_THEME="GitHub"
alias c='clear'


# define function that retrieves and runs last command
# function run-again {
#     # get previous history item
#     zle up-history
#     # confirm command
#     zle accept-line
# }

# define run-again widget from function of the same name
# zle -N run-again

# bind widget to Ctrl+X in viins mode
# bindkey -M viins '^p' run-again
# bind widget to Ctrl+X in vicmd mode
# bindkey -M vicmd '^p' run-again
bindkey '^H' backward-kill-word

export ANSIBLE_STDOUT_CALLBACK=yaml
bindkey -M viins 'jk' vi-cmd-mode

function ghcidb {
    ghcid --target "bitnomial-$1" ${@:2}
}

function ghcidb-lenient {
    cmd="stack ghci bitnomial-%1"
    cmd="${cmd} --test --bench"
    cmd="${cmd} --ghci-options=-fno-code --ghci-options=-fno-break-on-exception --ghci-options=-fno-break-on-error"
    cmd="${cmd} --ghci-options=-v1 --ghci-options=-ferror-spans"
    cmd="${cmd} --ghci-options=-fdefer-typed-holes --ghci-options=-Wno-typed-holes"
    ghcid --command "${cmd}"
}

function target_sources {
    case $1 in
        (bitnomial-depository-web) echo -n src/web/depository/src ;;
        (bitnomial-exchange-web) echo -n src/web/exchange/src ;;
        (bitnomial-auth-web) echo -n src/web/auth/src ;;
    esac
}

function ghcid_run {
    target=$1
    src=$(target_sources $target)
    executable=$2
    ghcid --setup ":set args ${@:3}" \
      --restart "$src" \
      --command "stack ghci --main-is ${target}:exe:${executable} $target" \
      --run
}

alias sqlite="rlwrap -a -c -i sqlite3"
alias sqlite3="rlwrap -a -c -i sqlite3"
alias ls='exa'
alias htop='btm'
alias man='tldr'
alias shake='stack exec shake --'

source /home/bsherman/.config/broot/launcher/bash/br

export PATH="/home/bsherman/.bitcoin/bin:$PATH"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:/home/bsherman/go/bin"
export PATH="$PATH:/home/bsherman/emacs/bin"
export PATH="$PATH:/opt/Beekeeper Studio"
export PATH="$PATH:/home/bsherman/.yarn/bin"

function vpnup {
  sudo wg-quick up wg0
}

function vpndown {
  sudo wg-quick down wg0
}



alias luamake=/home/bsherman/code/lua-language-server/3rd/luamake/luamake
export VAULT_ADDR=http://127.0.0.1:8200
